#!/bin/bash

set -ex

METHOD="${1:-${METHOD:-cloud}}"

publicIpFromInterface() {
  echo "Couldn't find a valid ipv4 address, using the first IP found on the interfaces as the PUBLICIP."
  DEFAULT_INTERFACE="$(ip -4 route list match default | grep -Eo "dev .*" | awk '{print $2}')"
  PUBLICIP=$(ip -4 addr sh dev "$DEFAULT_INTERFACE" | grep -w inet | head -n1 | awk '{print $2}' | grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b')
  PUBLIC_IP_FMT="${PUBLICIP//[.]/-}"
  echo ENDPOINT="${PUBLIC_IP_FMT}.traefik.me" | tee {{ installation_path }}/haproxy/.env
}

publicIpFromMetadata() {
  if curl -s http://169.254.169.254/metadata/v1/vendor-data | grep DigitalOcean >/dev/null; then
    PUBLICIP="$(curl -s http://169.254.169.254/metadata/v1/interfaces/public/0/ipv4/address)"
  elif test "$(curl -s http://169.254.169.254/latest/meta-data/services/domain)" = "amazonaws.com"; then
    PUBLICIP="$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)"
  elif test "$(curl -s -H Metadata:true --noproxy '*' 'http://169.254.169.254/metadata/instance/compute/provider/?api-version=2021-02-01&format=text')" = "Microsoft.Compute"; then
    if curl -H Metadata:true --noproxy '*' 'http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-08-01&format=text' | grep -oqE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"; then
        PUBLICIP="$(curl -H Metadata:true --noproxy '*' 'http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-08-01&format=text')"
    else
        PUBLICIP="$(curl -H Metadata:true --noproxy '*' 'http://169.254.169.254:80/metadata/loadbalancer?api-version=2020-10-01&format=text'|jq -r '.loadbalancer.publicIpAddresses[0].frontendIpAddress')"
    fi
  elif host -t A -W 10 metadata.google.internal 127.0.0.53 >/dev/null; then
    PUBLICIP="$(curl -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip")"
  fi

  if echo "${PUBLICIP}" | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"; then
    PUBLIC_IP_FMT="${PUBLICIP//[.]/-}"
    echo ENDPOINT="${PUBLIC_IP_FMT}.traefik.me" | tee {{ installation_path }}/haproxy/.env
  else
    publicIpFromInterface
  fi
}

if test "$METHOD" = "cloud"; then
  publicIpFromMetadata
fi